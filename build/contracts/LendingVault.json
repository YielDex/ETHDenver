{
  "contractName": "LendingVault",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_iPoolAddressesProviderAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_temporaryTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_orderBookAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "Shares",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "orderNonce",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "orderNonce",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_iPoolAddressesProviderAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_temporaryTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_orderBookAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Shares\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"orderNonce\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"orderNonce\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/LendingVault.sol\":\"LendingVault\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"project:/contracts/LendingVault.sol\":{\"keccak256\":\"0x829b9c3e796d353e24c5aeb1716173a231259bc44f96b0f39b7928e7c05dd5be\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://dd26b1bbaae36f51a93a7857d6ed614e95f278c0c594ac3e1a1a9d4d0a1f8af1\",\"dweb:/ipfs/QmZcxorrC8uCLaZr3jUuizB9ArC1QXXyn5D7mu6n5At9Yj\"]},\"project:/contracts/OrderBook.sol\":{\"keccak256\":\"0x5c5e60eac71f66c68af2f354a408ba0bd16c71e014def1c97cfccabe288fd902\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5d2a715e24780b76158e183f536bef20277d815b53d0b702840765b75825e72c\",\"dweb:/ipfs/QmPqt2u3cyBfDCKA6Wg1rxQVvLmWYYy4T3xzT6j2rDjxfk\"]},\"project:/contracts/OrderExecutor.sol\":{\"keccak256\":\"0xc0e659a87934fec34e458f75e8bdb579dc7f307fae09d23477c552654483f6f8\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d60deefd3d18f0ff307062e5a09f8c911685ee2f87fb88129b5b4f3e7fb7a58e\",\"dweb:/ipfs/QmWP6SKB4XKdGSs4p9TnkcCoZt68asB6m5hZD9u9PMDuPY\"]},\"project:/contracts/gelato/OpsReady.sol\":{\"keccak256\":\"0xcff1b53d0cfe2299b8e3fc7681d4848d4fd5b7b8711e2b054fe30c22e7c008ef\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://524da12021aea78e5dc2da4945be60b75874db9045ffb2781611abf3b858df78\",\"dweb:/ipfs/QmdL1pcDugkUSSiJG4BXt4U6NpYdZNFYtKrqAmbVXWw3h9\"]},\"project:/contracts/gelato/OpsTaskCreator.sol\":{\"keccak256\":\"0x729cb4ddc2dcdf5fe8c72a198f446740df0ffa90f918268bef0550fdeb394699\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://35dea137996e6bc823e6c9e34fa9bf6ad05714cb39e6d08c890f25a9cb011e79\",\"dweb:/ipfs/QmNr71jESWnmCg4jJFZXUDXpCCuQsJb6VU1n1CWeUxkry7\"]},\"project:/contracts/gelato/Types.sol\":{\"keccak256\":\"0x5d1971d12b8f8fb8d22e160051af073d40d7add58ab3156cbd34557c3cc25a42\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5034168d4fbdddef9da6de9136680d0c7308773719cbaa7f534a18a117c37822\",\"dweb:/ipfs/QmTAPMY3YrrCvEc16paa66HiXCxu62JZBiYwUyxSJBmgm1\"]},\"project:/contracts/oracles/tellor/UsingTellor.sol\":{\"keccak256\":\"0xbca0c5e2ae74f8f9bd40d294b9c5effc98f92f5852695578ce878e50d7b67f2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a860fe00626e6a75a0699560dbed3d3c3a55be372fbdb0d671eaf1610c8fe72\",\"dweb:/ipfs/Qmaq9gzsgb7XKnuwjFvJpPTzkGAcVBq2EavGcqcsbbWSBi\"]},\"project:/contracts/oracles/tellor/interface/IERC2362.sol\":{\"keccak256\":\"0x4c995dc66795d1bbca45097c026c69601aa60d5862662a01dfcdb2d0e384f959\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21b1624710b2bda9407e6d0c0eca310e965e548b71a159efc830c9902b348f85\",\"dweb:/ipfs/QmYwMFY3PYw5w2cYeTVTD5B8u5AvzGG18xbr2aMTSD5Fts\"]},\"project:/contracts/oracles/tellor/interface/IMappingContract.sol\":{\"keccak256\":\"0xcb86ce26dcc33210f53cfdf2bf73bbfbba8ca1eba1947025f09fd1163cbd7c39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb109d129bfce34d8bc31e1b67c209b54b43efd7869dfc366ff9c23272648fc4\",\"dweb:/ipfs/QmQ39G26YuDQn7GMFAAR8eHi58tBWKdQDVgQ3v61aiakRz\"]},\"project:/contracts/oracles/tellor/interface/ITellor.sol\":{\"keccak256\":\"0x7b84c49c30a5c30c74a6b4cdd9221933ce1a1cf66c50c8d0853bf979f6915442\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f9f65c9ceb0d753e08b1ddaeaa83db6af30788a3525b111b84d87c4a2ddb603\",\"dweb:/ipfs/QmZxUKLyRPMibRyMTRA2jmM39ABip7Uq7xncFZqmKwRnNe\"]},\"project:/contracts/solmate/mixins/ERC4626.sol\":{\"keccak256\":\"0x5f7023bc7a6d722a369a6957fd63b853532030c75659c4e290b8d3dab100d2f0\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://8b72eb8dde530a7f5b41a069ff0c3e051ce55f5bbe44a54c3e5b077666281bc1\",\"dweb:/ipfs/QmcSBEaJf3NjSC9EtkcbNDdpRPGQD5j8rkDtVirYRriWjF\"]},\"project:/contracts/solmate/tokens/ERC20.sol\":{\"keccak256\":\"0xd26619e6763a8073a70e5a7cdb339f60409cf430757c656b633ceb0fc8706c99\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://f8cb82b4596781ff76b495b0f23740193ab29b0926fa7422ace810ecf0fb465e\",\"dweb:/ipfs/Qmb6N2MYbM58tqU31J1xk7SwznDAbYc3JfSAS8TMamSiSf\"]},\"project:/contracts/solmate/utils/Bytes32AddressLib.sol\":{\"keccak256\":\"0x4a338f7139da81c012e1a79d2208717987c9ad309e4e53930ba425a6a18e0600\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://711fb9a93c41f0518fdd8fe4f82e1c67843de63cfb51b3e6e35ba029cfff3716\",\"dweb:/ipfs/QmcG8cZ2bkbkVtNyQZfA1qq6sZrDJb8LEZxFMExdb1jjpE\"]},\"project:/contracts/solmate/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0xab409877c0c336c44b09cba3fad828024085c3115864ff4f1a50c51d10b08f62\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://8867874e9b1e0e777d3962e5b691df1730223c4419d1e1966453bfa5fd2ff2b2\",\"dweb:/ipfs/QmezkwDrppQiH75tH8bWvW2vVKjbLm6ctTMnZPpBWjU4N6\"]},\"project:/contracts/solmate/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x50ed4ce75ea2950011a1885c8e4f11bc67c1bfa28e1406ed8f069696e968845a\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0032ef5a2589cd7a81b932b9ff4212bcd8c6a3c2246a17895bdc23bb77a8a5e1\",\"dweb:/ipfs/QmTxAKV28b27CNYp1A9Dck3deoZyp5JV5RkZ9MHfM74ywT\"]},\"project:/contracts/uniswap/ISwapRouter.sol\":{\"keccak256\":\"0x56b8c90695c96061ef4af856fc78d94a57b11cd79e15ecbf99ebda02b9f3cb84\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://22b7ea979e22ede7551b8c79e1a0c48973f689b5b306535c4cee7e76703619d8\",\"dweb:/ipfs/QmWQMv6hd7VCMngo1UMJvKZR1HZaWB79HJaqFXnN5JfDth\"]},\"project:/contracts/uniswap/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0xcfdb4ef24d2eefa5dbad0b65a5df9d207ea686ce98f4f3e6bf04449ac5d1a97f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a65cf1e26f77d15fde7c7c838b621a8a912bece8f855ffa8327ecee26dcdfe0d\",\"dweb:/ipfs/QmRm7ZfmS9ERoAxpCWfiAHCDsnxkNRg2W76xFEvb72fad1\"]},\"project:/contracts/yield-daddy/aave-v3/AaveV3ERC4626.sol\":{\"keccak256\":\"0x3aa6b5426881dc9b5b2671a74527698b001b454b76762cdbf07bbfdd1168b49d\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://a492687d1a8df8b44a5a933b0367c3b4a65a197c38d99391d01c088e7acffca7\",\"dweb:/ipfs/QmeKg8NpdenLFZH6qJain9aZQvyyjJwdbFuHWq5LAXNUHT\"]},\"project:/contracts/yield-daddy/aave-v3/AaveV3ERC4626Factory.sol\":{\"keccak256\":\"0x842359ed159e080040525c637067b9cc5cffb5cb00c6c6c1b3a65940d3a90612\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://5a8585e9c9d2b55757cceaa509d09fd6180a5a06c37de2d73230e0bc5569520e\",\"dweb:/ipfs/QmXJDKSk5MURWQzEuB8tAoyPxVNJt2CVYSRnqM9LBZcwDK\"]},\"project:/contracts/yield-daddy/aave-v3/IPoolAddressesProvider.sol\":{\"keccak256\":\"0x4ca94d09494d0fb4c096eb2ade6da30f4383b89e44b15fdbbf853aa678cbf829\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://6f0482ea8066701633483ce002854126e528aa609d207575d1f42157b7309e86\",\"dweb:/ipfs/QmYRai3ErUu2t625JVGmZvMgg8TwDDp2Xtr3CgJSSGvDeS\"]},\"project:/contracts/yield-daddy/aave-v3/external/IPool.sol\":{\"keccak256\":\"0xc7dc25eace7572fea1e7f3cf6834f157baf0a9e2dbb916a766ae2a639964be38\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://43a4a1a35a46f42a506241dc6164f0cfe51650ef84d5617fe3e5de97f025f9f5\",\"dweb:/ipfs/QmTf8GwjRq3mKFj5JR8aAUUeBotZNvUnUPzHxyu5UiHM2U\"]},\"project:/contracts/yield-daddy/base/ERC4626Factory.sol\":{\"keccak256\":\"0x4af27dd19bf61795550510960f870edd666ee28658f6955420ac43088de257c4\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://0b3fdefc5fa2dfe4d37d5c3647a1bd2b4e203370f1f68e0d1c1f289f77a42201\",\"dweb:/ipfs/QmX8UWuY35uZUfMbz4NsKBw54XfZyQYH6TtVHud6YUHHMh\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80630efe6a8b1461003b578063f3fef3a314610057575b600080fd5b6100556004803603810190610050919061076d565b610087565b005b610071600480360381019061006c91906107c0565b6102ea565b60405161007e919061080f565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610115576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010c90610887565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663095ea7b36000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b81526004016101ae9291906108b6565b6020604051808303816000875af11580156101cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f19190610917565b506000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636e553f6583306040518363ffffffff1660e01b815260040161028b929190610944565b6020604051808303816000875af11580156102aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ce9190610982565b6001600083815260200190815260200160002081905550505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461037a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037190610887565b60405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b36000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660016000868152602001908152602001600020546040518363ffffffff1660e01b81526004016104849291906108b6565b6020604051808303816000875af11580156104a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c79190610917565b5060008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ba087652600160008681526020019081526020016000205430306040518463ffffffff1660e01b8152600401610578939291906109af565b6020604051808303816000875af1158015610597573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bb9190610982565b90508373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663350157a86040518163ffffffff1660e01b8152600401602060405180830381865afa158015610644573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066891906109fb565b836040518363ffffffff1660e01b81526004016106869291906108b6565b6020604051808303816000875af11580156106a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c99190610917565b508091505092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610704826106d9565b9050919050565b610714816106f9565b811461071f57600080fd5b50565b6000813590506107318161070b565b92915050565b6000819050919050565b61074a81610737565b811461075557600080fd5b50565b60008135905061076781610741565b92915050565b600080600060608486031215610786576107856106d4565b5b600061079486828701610722565b93505060206107a586828701610758565b92505060406107b686828701610758565b9150509250925092565b600080604083850312156107d7576107d66106d4565b5b60006107e585828601610722565b92505060206107f685828601610758565b9150509250929050565b61080981610737565b82525050565b60006020820190506108246000830184610800565b92915050565b600082825260208201905092915050565b7f4e6f7420616c6c6f77656420616464726573732e000000000000000000000000600082015250565b600061087160148361082a565b915061087c8261083b565b602082019050919050565b600060208201905081810360008301526108a081610864565b9050919050565b6108b0816106f9565b82525050565b60006040820190506108cb60008301856108a7565b6108d86020830184610800565b9392505050565b60008115159050919050565b6108f4816108df565b81146108ff57600080fd5b50565b600081519050610911816108eb565b92915050565b60006020828403121561092d5761092c6106d4565b5b600061093b84828501610902565b91505092915050565b60006040820190506109596000830185610800565b61096660208301846108a7565b9392505050565b60008151905061097c81610741565b92915050565b600060208284031215610998576109976106d4565b5b60006109a68482850161096d565b91505092915050565b60006060820190506109c46000830186610800565b6109d160208301856108a7565b6109de60408301846108a7565b949350505050565b6000815190506109f58161070b565b92915050565b600060208284031215610a1157610a106106d4565b5b6000610a1f848285016109e6565b9150509291505056fea2646970667358221220ba7a04ca93ca36c2b946d08141d564f87187de968542a6f845aab853053a0cb564736f6c63430008130033",
  "immutableReferences": {
    "740": [
      {
        "length": 32,
        "start": 137
      },
      {
        "length": 32,
        "start": 1499
      }
    ],
    "742": [
      {
        "length": 32,
        "start": 750
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4196:27",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:27",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:27",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:27"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:27",
                "type": ""
              }
            ],
            "src": "7:75:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:27",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:27",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:27"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:27",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:27",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:27"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:27",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:27"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:27"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:27",
                "type": ""
              }
            ],
            "src": "334:126:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:27"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:27"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:27",
                "type": ""
              }
            ],
            "src": "466:96:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:27"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:27"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:27"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:27"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:27"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:27"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:27",
                "type": ""
              }
            ],
            "src": "568:122:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "759:80:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "769:22:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "784:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "778:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "778:13:27"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "769:5:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "827:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "800:26:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "800:33:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "800:33:27"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "737:6:27",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "745:3:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "753:5:27",
                "type": ""
              }
            ],
            "src": "696:143:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "956:552:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1002:83:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1004:77:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1004:79:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1004:79:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "977:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "986:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "973:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "973:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "998:2:27",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "969:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "969:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "966:119:27"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1095:128:27",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1110:15:27",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1124:1:27",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1114:6:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1139:74:27",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1185:9:27"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1196:6:27"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1181:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1181:22:27"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1205:7:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1149:31:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1149:64:27"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1139:6:27"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1233:129:27",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1248:16:27",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1262:2:27",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1252:6:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1278:74:27",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1324:9:27"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1335:6:27"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1320:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1320:22:27"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1344:7:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1288:31:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1288:64:27"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1278:6:27"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1372:129:27",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1387:16:27",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1401:2:27",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1391:6:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1417:74:27",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1463:9:27"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1474:6:27"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1459:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1459:22:27"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1483:7:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1427:31:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1427:64:27"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "1417:6:27"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "910:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "921:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "933:6:27",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "941:6:27",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "949:6:27",
                "type": ""
              }
            ],
            "src": "845:663:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1591:274:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1637:83:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1639:77:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1639:79:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1639:79:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1612:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1621:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1608:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1608:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1633:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1604:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1604:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "1601:119:27"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1730:128:27",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1745:15:27",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1759:1:27",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1749:6:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1774:74:27",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1820:9:27"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1831:6:27"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1816:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1816:22:27"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1840:7:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1784:31:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1784:64:27"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1774:6:27"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1561:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1572:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1584:6:27",
                "type": ""
              }
            ],
            "src": "1514:351:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1903:28:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1913:12:27",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1920:5:27"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "1913:3:27"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1889:5:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "1899:3:27",
                "type": ""
              }
            ],
            "src": "1871:60:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1997:82:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2007:66:27",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2065:5:27"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "2047:17:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2047:24:27"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "2038:8:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2038:34:27"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2020:17:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2020:53:27"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "2007:9:27"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1977:5:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1987:9:27",
                "type": ""
              }
            ],
            "src": "1937:142:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2145:66:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2155:50:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2199:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2168:30:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2168:37:27"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "2155:9:27"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2125:5:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "2135:9:27",
                "type": ""
              }
            ],
            "src": "2085:126:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2291:66:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2301:50:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2345:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2314:30:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2314:37:27"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "2301:9:27"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IPool_$6197_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2271:5:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "2281:9:27",
                "type": ""
              }
            ],
            "src": "2217:140:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2442:80:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2459:3:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2509:5:27"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_IPool_$6197_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2464:44:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2464:51:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2452:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2452:64:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2452:64:27"
                }
              ]
            },
            "name": "abi_encode_t_contract$_IPool_$6197_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2430:5:27",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2437:3:27",
                "type": ""
              }
            ],
            "src": "2363:159:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2640:138:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2650:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2662:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2673:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2658:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2658:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2650:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2744:6:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2757:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2768:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2753:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2753:17:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IPool_$6197_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2686:57:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2686:85:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2686:85:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IPool_$6197__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2612:9:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2624:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2635:4:27",
                "type": ""
              }
            ],
            "src": "2528:250:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2858:66:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2868:50:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2912:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2881:30:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2881:37:27"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "2868:9:27"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_ERC20_$4649_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2838:5:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "2848:9:27",
                "type": ""
              }
            ],
            "src": "2784:140:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3009:80:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3026:3:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3076:5:27"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_ERC20_$4649_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3031:44:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3031:51:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3019:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3019:64:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3019:64:27"
                }
              ]
            },
            "name": "abi_encode_t_contract$_ERC20_$4649_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2997:5:27",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3004:3:27",
                "type": ""
              }
            ],
            "src": "2930:159:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3207:138:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3217:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3229:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3240:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3225:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3225:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3217:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3311:6:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3324:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3335:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3320:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3320:17:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_ERC20_$4649_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3253:57:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3253:85:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3253:85:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ERC20_$4649__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3179:9:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3191:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3202:4:27",
                "type": ""
              }
            ],
            "src": "3095:250:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3412:51:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3422:35:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3451:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "3433:17:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3433:24:27"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3422:7:27"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_ERC4626_$4261",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3394:5:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3404:7:27",
                "type": ""
              }
            ],
            "src": "3351:112:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3528:95:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3601:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3610:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3613:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3603:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3603:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3603:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3551:5:27"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3592:5:27"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_ERC4626_$4261",
                              "nodeType": "YulIdentifier",
                              "src": "3558:33:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3558:40:27"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3548:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3548:51:27"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3541:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3541:59:27"
                  },
                  "nodeType": "YulIf",
                  "src": "3538:79:27"
                }
              ]
            },
            "name": "validator_revert_t_contract$_ERC4626_$4261",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3521:5:27",
                "type": ""
              }
            ],
            "src": "3469:154:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3708:96:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3718:22:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3733:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3727:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3727:13:27"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "3718:5:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3792:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_ERC4626_$4261",
                      "nodeType": "YulIdentifier",
                      "src": "3749:42:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3749:49:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3749:49:27"
                }
              ]
            },
            "name": "abi_decode_t_contract$_ERC4626_$4261_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "3686:6:27",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3694:3:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3702:5:27",
                "type": ""
              }
            ],
            "src": "3629:175:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3903:290:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3949:83:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "3951:77:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3951:79:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3951:79:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3924:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3933:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3920:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3920:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3945:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3916:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3916:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "3913:119:27"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4042:144:27",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4057:15:27",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4071:1:27",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4061:6:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4086:90:27",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4148:9:27"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4159:6:27"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4144:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4144:22:27"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4168:7:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_ERC4626_$4261_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "4096:47:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4096:80:27"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4086:6:27"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ERC4626_$4261_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3873:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3884:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3896:6:27",
                "type": ""
              }
            ],
            "src": "3810:383:27"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IPool_$6197_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IPool_$6197_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IPool_$6197_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IPool_$6197__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IPool_$6197_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_ERC20_$4649_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ERC20_$4649_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC20_$4649_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ERC20_$4649__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ERC20_$4649_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_contract$_ERC4626_$4261(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ERC4626_$4261(value) {\n        if iszero(eq(value, cleanup_t_contract$_ERC4626_$4261(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ERC4626_$4261_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ERC4626_$4261(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ERC4626_$4261_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ERC4626_$4261_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 27,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:6771:27",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:27",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:27",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:27"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:27",
                "type": ""
              }
            ],
            "src": "7:75:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:27",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:27",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:27"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:27",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:27",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:27"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:27",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:27"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:27"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:27",
                "type": ""
              }
            ],
            "src": "334:126:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:27"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:27"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:27",
                "type": ""
              }
            ],
            "src": "466:96:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:27"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:27"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:27"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:27"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:27"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:27"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:27",
                "type": ""
              }
            ],
            "src": "568:122:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "748:87:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "758:29:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "780:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "767:12:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "767:20:27"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "758:5:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "823:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "796:26:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "796:33:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "796:33:27"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "726:6:27",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "734:3:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "742:5:27",
                "type": ""
              }
            ],
            "src": "696:139:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "886:32:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "896:16:27",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "907:5:27"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "896:7:27"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "868:5:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "878:7:27",
                "type": ""
              }
            ],
            "src": "841:77:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "967:79:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1024:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1033:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1036:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1026:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1026:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1026:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "990:5:27"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1015:5:27"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "997:17:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "997:24:27"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "987:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "987:35:27"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "980:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "980:43:27"
                  },
                  "nodeType": "YulIf",
                  "src": "977:63:27"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "960:5:27",
                "type": ""
              }
            ],
            "src": "924:122:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1104:87:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1114:29:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1136:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1123:12:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1123:20:27"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1114:5:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1179:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1152:26:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1152:33:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1152:33:27"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1082:6:27",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1090:3:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1098:5:27",
                "type": ""
              }
            ],
            "src": "1052:139:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1297:519:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1343:83:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1345:77:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1345:79:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1345:79:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1318:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1327:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1314:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1314:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1339:2:27",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1310:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1310:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "1307:119:27"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1436:117:27",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1451:15:27",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1465:1:27",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1455:6:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1480:63:27",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1515:9:27"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1526:6:27"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1511:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1511:22:27"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1535:7:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1490:20:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1490:53:27"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1480:6:27"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1563:118:27",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1578:16:27",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1592:2:27",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1582:6:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1608:63:27",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1643:9:27"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1654:6:27"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1639:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1639:22:27"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1663:7:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1618:20:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1618:53:27"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1608:6:27"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1691:118:27",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1706:16:27",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1720:2:27",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1710:6:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1736:63:27",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1771:9:27"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1782:6:27"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1767:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1767:22:27"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1791:7:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1746:20:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1746:53:27"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "1736:6:27"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1251:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1262:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1274:6:27",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1282:6:27",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1290:6:27",
                "type": ""
              }
            ],
            "src": "1197:619:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1905:391:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1951:83:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1953:77:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1953:79:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1953:79:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1926:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1935:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1922:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1922:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1947:2:27",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1918:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1918:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "1915:119:27"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2044:117:27",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2059:15:27",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2073:1:27",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2063:6:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2088:63:27",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2123:9:27"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2134:6:27"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2119:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2119:22:27"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2143:7:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2098:20:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2098:53:27"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2088:6:27"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2171:118:27",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2186:16:27",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2200:2:27",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2190:6:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2216:63:27",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2251:9:27"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2262:6:27"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2247:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2247:22:27"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2271:7:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2226:20:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2226:53:27"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2216:6:27"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1867:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1878:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1890:6:27",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1898:6:27",
                "type": ""
              }
            ],
            "src": "1822:474:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2367:53:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2384:3:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2407:5:27"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2389:17:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2389:24:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2377:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2377:37:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2377:37:27"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2355:5:27",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2362:3:27",
                "type": ""
              }
            ],
            "src": "2302:118:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2524:124:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2534:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2546:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2557:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2542:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2542:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2534:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2614:6:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2627:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2638:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2623:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2623:17:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2570:43:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2570:71:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2570:71:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2496:9:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2508:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2519:4:27",
                "type": ""
              }
            ],
            "src": "2426:222:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2750:73:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2767:3:27"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2772:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2760:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2760:19:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2760:19:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2788:29:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2807:3:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2812:4:27",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2803:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2803:14:27"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "2788:11:27"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2722:3:27",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2727:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "2738:11:27",
                "type": ""
              }
            ],
            "src": "2654:169:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2935:64:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2957:6:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2965:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2953:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2953:14:27"
                      },
                      {
                        "hexValue": "4e6f7420616c6c6f77656420616464726573732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2969:22:27",
                        "type": "",
                        "value": "Not allowed address."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2946:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2946:46:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2946:46:27"
                }
              ]
            },
            "name": "store_literal_in_memory_ca7fa4d3c69dc8c120b252224e16a7198a8bbb1bf004d0d14d0232077ff93e69",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2927:6:27",
                "type": ""
              }
            ],
            "src": "2829:170:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3151:220:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3161:74:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3227:3:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3232:2:27",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3168:58:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3168:67:27"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3161:3:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3333:3:27"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_ca7fa4d3c69dc8c120b252224e16a7198a8bbb1bf004d0d14d0232077ff93e69",
                      "nodeType": "YulIdentifier",
                      "src": "3244:88:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3244:93:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3244:93:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3346:19:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3357:3:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3362:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3353:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3353:12:27"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3346:3:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_ca7fa4d3c69dc8c120b252224e16a7198a8bbb1bf004d0d14d0232077ff93e69_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3139:3:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3147:3:27",
                "type": ""
              }
            ],
            "src": "3005:366:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3548:248:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3558:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3570:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3581:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3566:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3566:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3558:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3605:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3616:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3601:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3601:17:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3624:4:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3630:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3620:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3620:20:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3594:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3594:47:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3594:47:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3650:139:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3784:4:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_ca7fa4d3c69dc8c120b252224e16a7198a8bbb1bf004d0d14d0232077ff93e69_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3658:124:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3658:131:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3650:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ca7fa4d3c69dc8c120b252224e16a7198a8bbb1bf004d0d14d0232077ff93e69__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3528:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3543:4:27",
                "type": ""
              }
            ],
            "src": "3377:419:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3867:53:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3884:3:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3907:5:27"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3889:17:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3889:24:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3877:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3877:37:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3877:37:27"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3855:5:27",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3862:3:27",
                "type": ""
              }
            ],
            "src": "3802:118:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4052:206:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4062:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4074:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4085:2:27",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4070:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4070:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4062:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4142:6:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4155:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4166:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4151:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4151:17:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4098:43:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4098:71:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4098:71:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4223:6:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4236:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4247:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4232:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4232:18:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4179:43:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4179:72:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4179:72:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4016:9:27",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4028:6:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4036:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4047:4:27",
                "type": ""
              }
            ],
            "src": "3926:332:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4306:48:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4316:32:27",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4341:5:27"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4334:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4334:13:27"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4327:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4327:21:27"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4316:7:27"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4288:5:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4298:7:27",
                "type": ""
              }
            ],
            "src": "4264:90:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4400:76:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4454:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4463:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4466:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4456:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4456:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4456:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4423:5:27"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4445:5:27"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "4430:14:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4430:21:27"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4420:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4420:32:27"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4413:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4413:40:27"
                  },
                  "nodeType": "YulIf",
                  "src": "4410:60:27"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4393:5:27",
                "type": ""
              }
            ],
            "src": "4360:116:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4542:77:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4552:22:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4567:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4561:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4561:13:27"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "4552:5:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4607:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "4583:23:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4583:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4583:30:27"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "4520:6:27",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4528:3:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4536:5:27",
                "type": ""
              }
            ],
            "src": "4482:137:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4699:271:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4745:83:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "4747:77:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4747:79:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4747:79:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4720:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4729:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4716:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4716:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4741:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4712:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4712:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "4709:119:27"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4838:125:27",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4853:15:27",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4867:1:27",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4857:6:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4882:71:27",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4925:9:27"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4936:6:27"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4921:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4921:22:27"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4945:7:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "4892:28:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4892:61:27"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4882:6:27"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4669:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4680:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4692:6:27",
                "type": ""
              }
            ],
            "src": "4625:345:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5102:206:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5112:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5124:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5135:2:27",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5120:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5120:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5112:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5192:6:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5205:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5216:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5201:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5201:17:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5148:43:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5148:71:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5148:71:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5273:6:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5286:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5297:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5282:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5282:18:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5229:43:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5229:72:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5229:72:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5066:9:27",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5078:6:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5086:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5097:4:27",
                "type": ""
              }
            ],
            "src": "4976:332:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5377:80:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5387:22:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "5402:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5396:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5396:13:27"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "5387:5:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5445:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "5418:26:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5418:33:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5418:33:27"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "5355:6:27",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5363:3:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5371:5:27",
                "type": ""
              }
            ],
            "src": "5314:143:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5540:274:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5586:83:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "5588:77:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5588:79:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5588:79:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5561:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5570:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5557:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5557:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5582:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5553:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5553:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "5550:119:27"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5679:128:27",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5694:15:27",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5708:1:27",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5698:6:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5723:74:27",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5769:9:27"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5780:6:27"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5765:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5765:22:27"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5789:7:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "5733:31:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5733:64:27"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5723:6:27"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5510:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5521:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5533:6:27",
                "type": ""
              }
            ],
            "src": "5463:351:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5974:288:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5984:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5996:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6007:2:27",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5992:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5992:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5984:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6064:6:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6077:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6088:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6073:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6073:17:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6020:43:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6020:71:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6020:71:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6145:6:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6158:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6169:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6154:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6154:18:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6101:43:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6101:72:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6101:72:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6227:6:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6240:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6251:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6236:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6236:18:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6183:43:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6183:72:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6183:72:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address_t_address__to_t_uint256_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5930:9:27",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5942:6:27",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5950:6:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5958:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5969:4:27",
                "type": ""
              }
            ],
            "src": "5820:442:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6331:80:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6341:22:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "6356:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6350:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6350:13:27"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "6341:5:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6399:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "6372:26:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6372:33:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6372:33:27"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "6309:6:27",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6317:3:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6325:5:27",
                "type": ""
              }
            ],
            "src": "6268:143:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6494:274:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6540:83:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "6542:77:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6542:79:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6542:79:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6515:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6524:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6511:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6511:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6536:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6507:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6507:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "6504:119:27"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6633:128:27",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6648:15:27",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6662:1:27",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6652:6:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6677:74:27",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6723:9:27"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6734:6:27"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6719:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6719:22:27"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6743:7:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "6687:31:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6687:64:27"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "6677:6:27"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6464:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6475:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6487:6:27",
                "type": ""
              }
            ],
            "src": "6417:351:27"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ca7fa4d3c69dc8c120b252224e16a7198a8bbb1bf004d0d14d0232077ff93e69(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not allowed address.\")\n\n    }\n\n    function abi_encode_t_stringliteral_ca7fa4d3c69dc8c120b252224e16a7198a8bbb1bf004d0d14d0232077ff93e69_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_ca7fa4d3c69dc8c120b252224e16a7198a8bbb1bf004d0d14d0232077ff93e69(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ca7fa4d3c69dc8c120b252224e16a7198a8bbb1bf004d0d14d0232077ff93e69__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ca7fa4d3c69dc8c120b252224e16a7198a8bbb1bf004d0d14d0232077ff93e69_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_address__to_t_uint256_t_address_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 27,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "208:2303:4:-:0;;;1101:645;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1241:17;1222:36;;;;;;;;;;1319:30;1268:82;;;;;;;;;;1377:25;;:33;;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1360:53;;;;;;;;;;1462:8;;1437:34;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1423:48;;;;;;;;;;1514:16;;1504:46;;;:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1481:71;;;;;;;;;;1624:15;1648:22;1624:47;;1703:11;;:25;;;1729:9;1703:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1681:8;:19;1690:9;1681:19;;;;;;;;;;;;;;;;:58;;;;;;;;;;;;;;;;;;1212:534;1101:645;;;208:2303;;;;;;;;;;:::o;88:117:27:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:663::-;933:6;941;949;998:2;986:9;977:7;973:23;969:32;966:119;;;1004:79;;:::i;:::-;966:119;1124:1;1149:64;1205:7;1196:6;1185:9;1181:22;1149:64;:::i;:::-;1139:74;;1095:128;1262:2;1288:64;1344:7;1335:6;1324:9;1320:22;1288:64;:::i;:::-;1278:74;;1233:129;1401:2;1427:64;1483:7;1474:6;1463:9;1459:22;1427:64;:::i;:::-;1417:74;;1372:129;845:663;;;;;:::o;1514:351::-;1584:6;1633:2;1621:9;1612:7;1608:23;1604:32;1601:119;;;1639:79;;:::i;:::-;1601:119;1759:1;1784:64;1840:7;1831:6;1820:9;1816:22;1784:64;:::i;:::-;1774:74;;1730:128;1514:351;;;;:::o;1871:60::-;1899:3;1920:5;1913:12;;1871:60;;;:::o;1937:142::-;1987:9;2020:53;2038:34;2047:24;2065:5;2047:24;:::i;:::-;2038:34;:::i;:::-;2020:53;:::i;:::-;2007:66;;1937:142;;;:::o;2085:126::-;2135:9;2168:37;2199:5;2168:37;:::i;:::-;2155:50;;2085:126;;;:::o;2217:140::-;2281:9;2314:37;2345:5;2314:37;:::i;:::-;2301:50;;2217:140;;;:::o;2363:159::-;2464:51;2509:5;2464:51;:::i;:::-;2459:3;2452:64;2363:159;;:::o;2528:250::-;2635:4;2673:2;2662:9;2658:18;2650:26;;2686:85;2768:1;2757:9;2753:17;2744:6;2686:85;:::i;:::-;2528:250;;;;:::o;2784:140::-;2848:9;2881:37;2912:5;2881:37;:::i;:::-;2868:50;;2784:140;;;:::o;2930:159::-;3031:51;3076:5;3031:51;:::i;:::-;3026:3;3019:64;2930:159;;:::o;3095:250::-;3202:4;3240:2;3229:9;3225:18;3217:26;;3253:85;3335:1;3324:9;3320:17;3311:6;3253:85;:::i;:::-;3095:250;;;;:::o;3351:112::-;3404:7;3433:24;3451:5;3433:24;:::i;:::-;3422:35;;3351:112;;;:::o;3469:154::-;3558:40;3592:5;3558:40;:::i;:::-;3551:5;3548:51;3538:79;;3613:1;3610;3603:12;3538:79;3469:154;:::o;3629:175::-;3702:5;3733:6;3727:13;3718:22;;3749:49;3792:5;3749:49;:::i;:::-;3629:175;;;;:::o;3810:383::-;3896:6;3945:2;3933:9;3924:7;3920:23;3916:32;3913:119;;;3951:79;;:::i;:::-;3913:119;4071:1;4096:80;4168:7;4159:6;4148:9;4144:22;4096:80;:::i;:::-;4086:90;;4042:144;3810:383;;;;:::o;208:2303:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "208:2303:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1752:289;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2047:461;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1752:289;564:16;550:30;;:10;:30;;;542:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1867:12:::1;1861:27;;;1897:8;:29:::0;1912:12:::1;1897:29;;;;;;;;;;;;;;;;;;;;;;;;;1929:7;1861:76;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1973:8;:29:::0;1988:12:::1;1973:29;;;;;;;;;;;;;;;;;;;;;;;;;:37;;;2011:7;2028:4;1973:61;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1947:11;:23;1959:10;1947:23;;;;;;;;;;;:87;;;;1752:289:::0;;;:::o;2047:461::-;2143:7;741:20;727:34;;:10;:34;;;719:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;2162:8:::1;:29:::0;2177:12:::1;2162:29;;;;;;;;;;;;;;;;;;;;;;;;;:37;;;2208:8;:29:::0;2223:12:::1;2208:29;;;;;;;;;;;;;;;;;;;;;;;;;2240:11;:23;2252:10;2240:23;;;;;;;;;;;;2162:102;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2274:14;2291:8:::0;:29:::1;2306:12;2291:29;;;;;;;;;;;;;;;;;;;;;;;;;:36;;;2328:11;:23;2340:10;2328:23;;;;;;;;;;;;2361:4;2376;2291:91;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2274:108;;2398:12;2392:28;;;2431:16;2421:46;;;:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2471:6;2392:86;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2495:6;2488:13;;;2047:461:::0;;;;:::o;88:117:27:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:619::-;1274:6;1282;1290;1339:2;1327:9;1318:7;1314:23;1310:32;1307:119;;;1345:79;;:::i;:::-;1307:119;1465:1;1490:53;1535:7;1526:6;1515:9;1511:22;1490:53;:::i;:::-;1480:63;;1436:117;1592:2;1618:53;1663:7;1654:6;1643:9;1639:22;1618:53;:::i;:::-;1608:63;;1563:118;1720:2;1746:53;1791:7;1782:6;1771:9;1767:22;1746:53;:::i;:::-;1736:63;;1691:118;1197:619;;;;;:::o;1822:474::-;1890:6;1898;1947:2;1935:9;1926:7;1922:23;1918:32;1915:119;;;1953:79;;:::i;:::-;1915:119;2073:1;2098:53;2143:7;2134:6;2123:9;2119:22;2098:53;:::i;:::-;2088:63;;2044:117;2200:2;2226:53;2271:7;2262:6;2251:9;2247:22;2226:53;:::i;:::-;2216:63;;2171:118;1822:474;;;;;:::o;2302:118::-;2389:24;2407:5;2389:24;:::i;:::-;2384:3;2377:37;2302:118;;:::o;2426:222::-;2519:4;2557:2;2546:9;2542:18;2534:26;;2570:71;2638:1;2627:9;2623:17;2614:6;2570:71;:::i;:::-;2426:222;;;;:::o;2654:169::-;2738:11;2772:6;2767:3;2760:19;2812:4;2807:3;2803:14;2788:29;;2654:169;;;;:::o;2829:170::-;2969:22;2965:1;2957:6;2953:14;2946:46;2829:170;:::o;3005:366::-;3147:3;3168:67;3232:2;3227:3;3168:67;:::i;:::-;3161:74;;3244:93;3333:3;3244:93;:::i;:::-;3362:2;3357:3;3353:12;3346:19;;3005:366;;;:::o;3377:419::-;3543:4;3581:2;3570:9;3566:18;3558:26;;3630:9;3624:4;3620:20;3616:1;3605:9;3601:17;3594:47;3658:131;3784:4;3658:131;:::i;:::-;3650:139;;3377:419;;;:::o;3802:118::-;3889:24;3907:5;3889:24;:::i;:::-;3884:3;3877:37;3802:118;;:::o;3926:332::-;4047:4;4085:2;4074:9;4070:18;4062:26;;4098:71;4166:1;4155:9;4151:17;4142:6;4098:71;:::i;:::-;4179:72;4247:2;4236:9;4232:18;4223:6;4179:72;:::i;:::-;3926:332;;;;;:::o;4264:90::-;4298:7;4341:5;4334:13;4327:21;4316:32;;4264:90;;;:::o;4360:116::-;4430:21;4445:5;4430:21;:::i;:::-;4423:5;4420:32;4410:60;;4466:1;4463;4456:12;4410:60;4360:116;:::o;4482:137::-;4536:5;4567:6;4561:13;4552:22;;4583:30;4607:5;4583:30;:::i;:::-;4482:137;;;;:::o;4625:345::-;4692:6;4741:2;4729:9;4720:7;4716:23;4712:32;4709:119;;;4747:79;;:::i;:::-;4709:119;4867:1;4892:61;4945:7;4936:6;4925:9;4921:22;4892:61;:::i;:::-;4882:71;;4838:125;4625:345;;;;:::o;4976:332::-;5097:4;5135:2;5124:9;5120:18;5112:26;;5148:71;5216:1;5205:9;5201:17;5192:6;5148:71;:::i;:::-;5229:72;5297:2;5286:9;5282:18;5273:6;5229:72;:::i;:::-;4976:332;;;;;:::o;5314:143::-;5371:5;5402:6;5396:13;5387:22;;5418:33;5445:5;5418:33;:::i;:::-;5314:143;;;;:::o;5463:351::-;5533:6;5582:2;5570:9;5561:7;5557:23;5553:32;5550:119;;;5588:79;;:::i;:::-;5550:119;5708:1;5733:64;5789:7;5780:6;5769:9;5765:22;5733:64;:::i;:::-;5723:74;;5679:128;5463:351;;;;:::o;5820:442::-;5969:4;6007:2;5996:9;5992:18;5984:26;;6020:71;6088:1;6077:9;6073:17;6064:6;6020:71;:::i;:::-;6101:72;6169:2;6158:9;6154:18;6145:6;6101:72;:::i;:::-;6183;6251:2;6240:9;6236:18;6227:6;6183:72;:::i;:::-;5820:442;;;;;;:::o;6268:143::-;6325:5;6356:6;6350:13;6341:22;;6372:33;6399:5;6372:33;:::i;:::-;6268:143;;;;:::o;6417:351::-;6487:6;6536:2;6524:9;6515:7;6511:23;6507:32;6504:119;;;6542:79;;:::i;:::-;6504:119;6662:1;6687:64;6743:7;6734:6;6723:9;6719:22;6687:64;:::i;:::-;6677:74;;6633:128;6417:351;;;;:::o",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.19;\n\nimport \"./yield-daddy/aave-v3/AaveV3ERC4626Factory.sol\";\nimport \"./yield-daddy/aave-v3/IPoolAddressesProvider.sol\";\nimport \"./OrderBook.sol\";\n\ncontract LendingVault {\n\n    AaveV3ERC4626Factory private immutable aaveFactory;\n    IPool private immutable aavePool;\n    IPoolAddressesProvider private immutable aavePoolAddressesProvider;\n\n    address private immutable orderBookAddress;\n    address private immutable orderExecutorAddress;\n    \n    modifier onlyOrderBook {\n        require(msg.sender == orderBookAddress, \"Not allowed address.\");\n        _; // Continue the execution of the function called\n    }\n    \n    modifier onlyOrderExecutor {\n        require(msg.sender == orderExecutorAddress, \"Not allowed address.\");\n        _; // Continue the execution of the function called\n    }\n\n    // In the future, there will be a mapping for each strategies for one asset rather than this one\n    mapping(ERC20 => ERC4626) private erc4626s;\n    mapping(uint256 => uint256) private orderShares;\n    \n    event Shares(uint256 shares);\n\n    constructor(address _iPoolAddressesProviderAddress, address _temporaryTokenAddress, address _orderBookAddress) {\n        orderBookAddress = _orderBookAddress;\n        aavePoolAddressesProvider = IPoolAddressesProvider(_iPoolAddressesProviderAddress);\n        aavePool = IPool(aavePoolAddressesProvider.getPool());\n        aaveFactory = new AaveV3ERC4626Factory(aavePool);\n        orderExecutorAddress = OrderBook(orderBookAddress).getExecutorAddress();\n\n        // testAsset that we want to include from from start\n        ERC20 usdcERC20 = ERC20(_temporaryTokenAddress);\n        erc4626s[usdcERC20] = aaveFactory.createERC4626(usdcERC20);\n    }\n\n    function deposit(address tokenAddress, uint256 _amount, uint256 orderNonce) external onlyOrderBook {\n        ERC20(tokenAddress).approve(address(erc4626s[ERC20(tokenAddress)]), _amount);\n        orderShares[orderNonce] = erc4626s[ERC20(tokenAddress)].deposit(_amount, address(this));\n    }\n\n    function withdraw(address tokenAddress, uint256 orderNonce) external onlyOrderExecutor returns (uint256) {\n        erc4626s[ERC20(tokenAddress)].approve(address(erc4626s[ERC20(tokenAddress)]), orderShares[orderNonce]);\n        uint256 amount = erc4626s[ERC20(tokenAddress)].redeem(orderShares[orderNonce], address(this), address(this));\n        ERC20(tokenAddress).transfer(OrderBook(orderBookAddress).getExecutorAddress(), amount);\n        return amount;\n    }\n\n}",
  "sourcePath": "/Users/blabla/Documents/gelato_test/contracts/LendingVault.sol",
  "ast": {
    "absolutePath": "project:/contracts/LendingVault.sol",
    "exportedSymbols": {
      "AaveV3ERC4626": [
        5751
      ],
      "AaveV3ERC4626Factory": [
        5916
      ],
      "Address": [
        724
      ],
      "Autopay": [
        3740
      ],
      "ERC20": [
        4649
      ],
      "ERC4626": [
        4261
      ],
      "ERC4626Factory": [
        6478
      ],
      "IERC20": [
        77
      ],
      "IERC20Permit": [
        113
      ],
      "IERC2362": [
        2697
      ],
      "IMappingContract": [
        2707
      ],
      "IOps": [
        1921
      ],
      "IOpsProxyFactory": [
        1950
      ],
      "IPool": [
        6197
      ],
      "IPoolAddressesProvider": [
        6125
      ],
      "ISwapRouter": [
        5032
      ],
      "ITaskTreasuryUpgradable": [
        1940
      ],
      "ITellor": [
        3702
      ],
      "IUniswapV3SwapCallback": [
        5046
      ],
      "LendingVault": [
        951
      ],
      "Module": [
        1875
      ],
      "ModuleData": [
        1883
      ],
      "OpsReady": [
        1674
      ],
      "OpsTaskCreator": [
        1868
      ],
      "OrderBook": [
        1299
      ],
      "OrderDatas": [
        972
      ],
      "OrderExecutor": [
        1554
      ],
      "SafeERC20": [
        394
      ],
      "UsingTellor": [
        2681
      ]
    },
    "id": 952,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 726,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:24:4"
      },
      {
        "absolutePath": "project:/contracts/yield-daddy/aave-v3/AaveV3ERC4626Factory.sol",
        "file": "./yield-daddy/aave-v3/AaveV3ERC4626Factory.sol",
        "id": 727,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 952,
        "sourceUnit": 5917,
        "src": "65:56:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/yield-daddy/aave-v3/IPoolAddressesProvider.sol",
        "file": "./yield-daddy/aave-v3/IPoolAddressesProvider.sol",
        "id": 728,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 952,
        "sourceUnit": 6126,
        "src": "122:58:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/OrderBook.sol",
        "file": "./OrderBook.sol",
        "id": 729,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 952,
        "sourceUnit": 1300,
        "src": "181:25:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "LendingVault",
        "contractDependencies": [
          5916
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 951,
        "linearizedBaseContracts": [
          951
        ],
        "name": "LendingVault",
        "nameLocation": "217:12:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 732,
            "mutability": "immutable",
            "name": "aaveFactory",
            "nameLocation": "276:11:4",
            "nodeType": "VariableDeclaration",
            "scope": 951,
            "src": "237:50:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AaveV3ERC4626Factory_$5916",
              "typeString": "contract AaveV3ERC4626Factory"
            },
            "typeName": {
              "id": 731,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 730,
                "name": "AaveV3ERC4626Factory",
                "nameLocations": [
                  "237:20:4"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5916,
                "src": "237:20:4"
              },
              "referencedDeclaration": 5916,
              "src": "237:20:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AaveV3ERC4626Factory_$5916",
                "typeString": "contract AaveV3ERC4626Factory"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 735,
            "mutability": "immutable",
            "name": "aavePool",
            "nameLocation": "317:8:4",
            "nodeType": "VariableDeclaration",
            "scope": 951,
            "src": "293:32:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IPool_$6197",
              "typeString": "contract IPool"
            },
            "typeName": {
              "id": 734,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 733,
                "name": "IPool",
                "nameLocations": [
                  "293:5:4"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6197,
                "src": "293:5:4"
              },
              "referencedDeclaration": 6197,
              "src": "293:5:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPool_$6197",
                "typeString": "contract IPool"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 738,
            "mutability": "immutable",
            "name": "aavePoolAddressesProvider",
            "nameLocation": "372:25:4",
            "nodeType": "VariableDeclaration",
            "scope": 951,
            "src": "331:66:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IPoolAddressesProvider_$6125",
              "typeString": "contract IPoolAddressesProvider"
            },
            "typeName": {
              "id": 737,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 736,
                "name": "IPoolAddressesProvider",
                "nameLocations": [
                  "331:22:4"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6125,
                "src": "331:22:4"
              },
              "referencedDeclaration": 6125,
              "src": "331:22:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPoolAddressesProvider_$6125",
                "typeString": "contract IPoolAddressesProvider"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 740,
            "mutability": "immutable",
            "name": "orderBookAddress",
            "nameLocation": "430:16:4",
            "nodeType": "VariableDeclaration",
            "scope": 951,
            "src": "404:42:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 739,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "404:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 742,
            "mutability": "immutable",
            "name": "orderExecutorAddress",
            "nameLocation": "478:20:4",
            "nodeType": "VariableDeclaration",
            "scope": 951,
            "src": "452:46:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 741,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "452:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 753,
              "nodeType": "Block",
              "src": "532:140:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 745,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "550:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "554:6:4",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "550:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 747,
                          "name": "orderBookAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 740,
                          "src": "564:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "550:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420616c6c6f77656420616464726573732e",
                        "id": 749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "582:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ca7fa4d3c69dc8c120b252224e16a7198a8bbb1bf004d0d14d0232077ff93e69",
                          "typeString": "literal_string \"Not allowed address.\""
                        },
                        "value": "Not allowed address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ca7fa4d3c69dc8c120b252224e16a7198a8bbb1bf004d0d14d0232077ff93e69",
                          "typeString": "literal_string \"Not allowed address.\""
                        }
                      ],
                      "id": 744,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "542:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "542:63:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 751,
                  "nodeType": "ExpressionStatement",
                  "src": "542:63:4"
                },
                {
                  "id": 752,
                  "nodeType": "PlaceholderStatement",
                  "src": "615:1:4"
                }
              ]
            },
            "id": 754,
            "name": "onlyOrderBook",
            "nameLocation": "518:13:4",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 743,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "532:0:4"
            },
            "src": "509:163:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 765,
              "nodeType": "Block",
              "src": "709:144:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 757,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "727:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "731:6:4",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "727:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 759,
                          "name": "orderExecutorAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 742,
                          "src": "741:20:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "727:34:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420616c6c6f77656420616464726573732e",
                        "id": 761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "763:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ca7fa4d3c69dc8c120b252224e16a7198a8bbb1bf004d0d14d0232077ff93e69",
                          "typeString": "literal_string \"Not allowed address.\""
                        },
                        "value": "Not allowed address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ca7fa4d3c69dc8c120b252224e16a7198a8bbb1bf004d0d14d0232077ff93e69",
                          "typeString": "literal_string \"Not allowed address.\""
                        }
                      ],
                      "id": 756,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "719:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "719:67:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 763,
                  "nodeType": "ExpressionStatement",
                  "src": "719:67:4"
                },
                {
                  "id": 764,
                  "nodeType": "PlaceholderStatement",
                  "src": "796:1:4"
                }
              ]
            },
            "id": 766,
            "name": "onlyOrderExecutor",
            "nameLocation": "691:17:4",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 755,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "709:0:4"
            },
            "src": "682:171:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 772,
            "mutability": "mutable",
            "name": "erc4626s",
            "nameLocation": "994:8:4",
            "nodeType": "VariableDeclaration",
            "scope": 951,
            "src": "960:42:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_ERC20_$4649_$_t_contract$_ERC4626_$4261_$",
              "typeString": "mapping(contract ERC20 => contract ERC4626)"
            },
            "typeName": {
              "id": 771,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 768,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 767,
                  "name": "ERC20",
                  "nameLocations": [
                    "968:5:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4649,
                  "src": "968:5:4"
                },
                "referencedDeclaration": 4649,
                "src": "968:5:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ERC20_$4649",
                  "typeString": "contract ERC20"
                }
              },
              "nodeType": "Mapping",
              "src": "960:25:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_ERC20_$4649_$_t_contract$_ERC4626_$4261_$",
                "typeString": "mapping(contract ERC20 => contract ERC4626)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 770,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 769,
                  "name": "ERC4626",
                  "nameLocations": [
                    "977:7:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4261,
                  "src": "977:7:4"
                },
                "referencedDeclaration": 4261,
                "src": "977:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ERC4626_$4261",
                  "typeString": "contract ERC4626"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 776,
            "mutability": "mutable",
            "name": "orderShares",
            "nameLocation": "1044:11:4",
            "nodeType": "VariableDeclaration",
            "scope": 951,
            "src": "1008:47:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 775,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 773,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1016:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1008:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 774,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1027:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "eventSelector": "38ec1eb992db0bce7d7fe6cf61781aad72ab2f01c23953344ba0666f65e3dc73",
            "id": 780,
            "name": "Shares",
            "nameLocation": "1072:6:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 778,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "1087:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 780,
                  "src": "1079:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 777,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1079:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1078:16:4"
            },
            "src": "1066:29:4"
          },
          {
            "body": {
              "id": 839,
              "nodeType": "Block",
              "src": "1212:534:4",
              "statements": [
                {
                  "expression": {
                    "id": 791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 789,
                      "name": "orderBookAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 740,
                      "src": "1222:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 790,
                      "name": "_orderBookAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 786,
                      "src": "1241:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1222:36:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 792,
                  "nodeType": "ExpressionStatement",
                  "src": "1222:36:4"
                },
                {
                  "expression": {
                    "id": 797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 793,
                      "name": "aavePoolAddressesProvider",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 738,
                      "src": "1268:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPoolAddressesProvider_$6125",
                        "typeString": "contract IPoolAddressesProvider"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 795,
                          "name": "_iPoolAddressesProviderAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 782,
                          "src": "1319:30:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 794,
                        "name": "IPoolAddressesProvider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6125,
                        "src": "1296:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IPoolAddressesProvider_$6125_$",
                          "typeString": "type(contract IPoolAddressesProvider)"
                        }
                      },
                      "id": 796,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1296:54:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPoolAddressesProvider_$6125",
                        "typeString": "contract IPoolAddressesProvider"
                      }
                    },
                    "src": "1268:82:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPoolAddressesProvider_$6125",
                      "typeString": "contract IPoolAddressesProvider"
                    }
                  },
                  "id": 798,
                  "nodeType": "ExpressionStatement",
                  "src": "1268:82:4"
                },
                {
                  "expression": {
                    "id": 805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 799,
                      "name": "aavePool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 735,
                      "src": "1360:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPool_$6197",
                        "typeString": "contract IPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 801,
                              "name": "aavePoolAddressesProvider",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 738,
                              "src": "1377:25:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPoolAddressesProvider_$6125",
                                "typeString": "contract IPoolAddressesProvider"
                              }
                            },
                            "id": 802,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1403:7:4",
                            "memberName": "getPool",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6046,
                            "src": "1377:33:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1377:35:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 800,
                        "name": "IPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6197,
                        "src": "1371:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IPool_$6197_$",
                          "typeString": "type(contract IPool)"
                        }
                      },
                      "id": 804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1371:42:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPool_$6197",
                        "typeString": "contract IPool"
                      }
                    },
                    "src": "1360:53:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPool_$6197",
                      "typeString": "contract IPool"
                    }
                  },
                  "id": 806,
                  "nodeType": "ExpressionStatement",
                  "src": "1360:53:4"
                },
                {
                  "expression": {
                    "id": 813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 807,
                      "name": "aaveFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 732,
                      "src": "1423:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AaveV3ERC4626Factory_$5916",
                        "typeString": "contract AaveV3ERC4626Factory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 811,
                          "name": "aavePool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 735,
                          "src": "1462:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPool_$6197",
                            "typeString": "contract IPool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IPool_$6197",
                            "typeString": "contract IPool"
                          }
                        ],
                        "id": 810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1437:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IPool_$6197_$returns$_t_contract$_AaveV3ERC4626Factory_$5916_$",
                          "typeString": "function (contract IPool) returns (contract AaveV3ERC4626Factory)"
                        },
                        "typeName": {
                          "id": 809,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 808,
                            "name": "AaveV3ERC4626Factory",
                            "nameLocations": [
                              "1441:20:4"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 5916,
                            "src": "1441:20:4"
                          },
                          "referencedDeclaration": 5916,
                          "src": "1441:20:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AaveV3ERC4626Factory_$5916",
                            "typeString": "contract AaveV3ERC4626Factory"
                          }
                        }
                      },
                      "id": 812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1437:34:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AaveV3ERC4626Factory_$5916",
                        "typeString": "contract AaveV3ERC4626Factory"
                      }
                    },
                    "src": "1423:48:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AaveV3ERC4626Factory_$5916",
                      "typeString": "contract AaveV3ERC4626Factory"
                    }
                  },
                  "id": 814,
                  "nodeType": "ExpressionStatement",
                  "src": "1423:48:4"
                },
                {
                  "expression": {
                    "id": 821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 815,
                      "name": "orderExecutorAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 742,
                      "src": "1481:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 817,
                              "name": "orderBookAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 740,
                              "src": "1514:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 816,
                            "name": "OrderBook",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1299,
                            "src": "1504:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_OrderBook_$1299_$",
                              "typeString": "type(contract OrderBook)"
                            }
                          },
                          "id": 818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1504:27:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OrderBook_$1299",
                            "typeString": "contract OrderBook"
                          }
                        },
                        "id": 819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1532:18:4",
                        "memberName": "getExecutorAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1298,
                        "src": "1504:46:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                          "typeString": "function () view external returns (address)"
                        }
                      },
                      "id": 820,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1504:48:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1481:71:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 822,
                  "nodeType": "ExpressionStatement",
                  "src": "1481:71:4"
                },
                {
                  "assignments": [
                    825
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 825,
                      "mutability": "mutable",
                      "name": "usdcERC20",
                      "nameLocation": "1630:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 839,
                      "src": "1624:15:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$4649",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 824,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 823,
                          "name": "ERC20",
                          "nameLocations": [
                            "1624:5:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4649,
                          "src": "1624:5:4"
                        },
                        "referencedDeclaration": 4649,
                        "src": "1624:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$4649",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 829,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 827,
                        "name": "_temporaryTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 784,
                        "src": "1648:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 826,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4649,
                      "src": "1642:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$4649_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1642:29:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$4649",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1624:47:4"
                },
                {
                  "expression": {
                    "id": 837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 830,
                        "name": "erc4626s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 772,
                        "src": "1681:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_ERC20_$4649_$_t_contract$_ERC4626_$4261_$",
                          "typeString": "mapping(contract ERC20 => contract ERC4626)"
                        }
                      },
                      "id": 832,
                      "indexExpression": {
                        "id": 831,
                        "name": "usdcERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 825,
                        "src": "1690:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$4649",
                          "typeString": "contract ERC20"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1681:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC4626_$4261",
                        "typeString": "contract ERC4626"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 835,
                          "name": "usdcERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 825,
                          "src": "1729:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$4649",
                            "typeString": "contract ERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$4649",
                            "typeString": "contract ERC20"
                          }
                        ],
                        "expression": {
                          "id": 833,
                          "name": "aaveFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 732,
                          "src": "1703:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AaveV3ERC4626Factory_$5916",
                            "typeString": "contract AaveV3ERC4626Factory"
                          }
                        },
                        "id": 834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1715:13:4",
                        "memberName": "createERC4626",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5861,
                        "src": "1703:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$4649_$returns$_t_contract$_ERC4626_$4261_$",
                          "typeString": "function (contract ERC20) external returns (contract ERC4626)"
                        }
                      },
                      "id": 836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1703:36:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC4626_$4261",
                        "typeString": "contract ERC4626"
                      }
                    },
                    "src": "1681:58:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC4626_$4261",
                      "typeString": "contract ERC4626"
                    }
                  },
                  "id": 838,
                  "nodeType": "ExpressionStatement",
                  "src": "1681:58:4"
                }
              ]
            },
            "id": 840,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 787,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 782,
                  "mutability": "mutable",
                  "name": "_iPoolAddressesProviderAddress",
                  "nameLocation": "1121:30:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 840,
                  "src": "1113:38:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 781,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1113:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 784,
                  "mutability": "mutable",
                  "name": "_temporaryTokenAddress",
                  "nameLocation": "1161:22:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 840,
                  "src": "1153:30:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 783,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1153:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 786,
                  "mutability": "mutable",
                  "name": "_orderBookAddress",
                  "nameLocation": "1193:17:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 840,
                  "src": "1185:25:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 785,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1185:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1112:99:4"
            },
            "returnParameters": {
              "id": 788,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1212:0:4"
            },
            "scope": 951,
            "src": "1101:645:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 883,
              "nodeType": "Block",
              "src": "1851:190:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 857,
                              "name": "erc4626s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 772,
                              "src": "1897:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_ERC20_$4649_$_t_contract$_ERC4626_$4261_$",
                                "typeString": "mapping(contract ERC20 => contract ERC4626)"
                              }
                            },
                            "id": 861,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "id": 859,
                                  "name": "tokenAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 842,
                                  "src": "1912:12:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 858,
                                "name": "ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4649,
                                "src": "1906:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20_$4649_$",
                                  "typeString": "type(contract ERC20)"
                                }
                              },
                              "id": 860,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1906:19:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$4649",
                                "typeString": "contract ERC20"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1897:29:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC4626_$4261",
                              "typeString": "contract ERC4626"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC4626_$4261",
                              "typeString": "contract ERC4626"
                            }
                          ],
                          "id": 856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1889:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 855,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1889:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1889:38:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 863,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 844,
                        "src": "1929:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 852,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 842,
                            "src": "1867:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 851,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4649,
                          "src": "1861:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$4649_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1861:19:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$4649",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1881:7:4",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4366,
                      "src": "1861:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1861:76:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 865,
                  "nodeType": "ExpressionStatement",
                  "src": "1861:76:4"
                },
                {
                  "expression": {
                    "id": 881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 866,
                        "name": "orderShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 776,
                        "src": "1947:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 868,
                      "indexExpression": {
                        "id": 867,
                        "name": "orderNonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 846,
                        "src": "1959:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1947:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 875,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 844,
                          "src": "2011:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 878,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "2028:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LendingVault_$951",
                                "typeString": "contract LendingVault"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LendingVault_$951",
                                "typeString": "contract LendingVault"
                              }
                            ],
                            "id": 877,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2020:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 876,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2020:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2020:13:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 869,
                            "name": "erc4626s",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 772,
                            "src": "1973:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_contract$_ERC20_$4649_$_t_contract$_ERC4626_$4261_$",
                              "typeString": "mapping(contract ERC20 => contract ERC4626)"
                            }
                          },
                          "id": 873,
                          "indexExpression": {
                            "arguments": [
                              {
                                "id": 871,
                                "name": "tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 842,
                                "src": "1988:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 870,
                              "name": "ERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4649,
                              "src": "1982:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC20_$4649_$",
                                "typeString": "type(contract ERC20)"
                              }
                            },
                            "id": 872,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1982:19:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$4649",
                              "typeString": "contract ERC20"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1973:29:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC4626_$4261",
                            "typeString": "contract ERC4626"
                          }
                        },
                        "id": 874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2003:7:4",
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3857,
                        "src": "1973:37:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (uint256,address) external returns (uint256)"
                        }
                      },
                      "id": 880,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1973:61:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1947:87:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 882,
                  "nodeType": "ExpressionStatement",
                  "src": "1947:87:4"
                }
              ]
            },
            "functionSelector": "0efe6a8b",
            "id": 884,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 849,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 848,
                  "name": "onlyOrderBook",
                  "nameLocations": [
                    "1837:13:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 754,
                  "src": "1837:13:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "1837:13:4"
              }
            ],
            "name": "deposit",
            "nameLocation": "1761:7:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 842,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "1777:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "1769:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 841,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1769:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 844,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1799:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "1791:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 843,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1791:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 846,
                  "mutability": "mutable",
                  "name": "orderNonce",
                  "nameLocation": "1816:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "1808:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 845,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1808:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1768:59:4"
            },
            "returnParameters": {
              "id": 850,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1851:0:4"
            },
            "scope": 951,
            "src": "1752:289:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 949,
              "nodeType": "Block",
              "src": "2152:356:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 903,
                              "name": "erc4626s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 772,
                              "src": "2208:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_ERC20_$4649_$_t_contract$_ERC4626_$4261_$",
                                "typeString": "mapping(contract ERC20 => contract ERC4626)"
                              }
                            },
                            "id": 907,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "id": 905,
                                  "name": "tokenAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 886,
                                  "src": "2223:12:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 904,
                                "name": "ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4649,
                                "src": "2217:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20_$4649_$",
                                  "typeString": "type(contract ERC20)"
                                }
                              },
                              "id": 906,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2217:19:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$4649",
                                "typeString": "contract ERC20"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2208:29:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC4626_$4261",
                              "typeString": "contract ERC4626"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC4626_$4261",
                              "typeString": "contract ERC4626"
                            }
                          ],
                          "id": 902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2200:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 901,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2200:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2200:38:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 909,
                          "name": "orderShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 776,
                          "src": "2240:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 911,
                        "indexExpression": {
                          "id": 910,
                          "name": "orderNonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "2252:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2240:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 895,
                          "name": "erc4626s",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 772,
                          "src": "2162:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_ERC20_$4649_$_t_contract$_ERC4626_$4261_$",
                            "typeString": "mapping(contract ERC20 => contract ERC4626)"
                          }
                        },
                        "id": 899,
                        "indexExpression": {
                          "arguments": [
                            {
                              "id": 897,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 886,
                              "src": "2177:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 896,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4649,
                            "src": "2171:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$4649_$",
                              "typeString": "type(contract ERC20)"
                            }
                          },
                          "id": 898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2171:19:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$4649",
                            "typeString": "contract ERC20"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2162:29:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC4626_$4261",
                          "typeString": "contract ERC4626"
                        }
                      },
                      "id": 900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2192:7:4",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4366,
                      "src": "2162:37:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2162:102:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 913,
                  "nodeType": "ExpressionStatement",
                  "src": "2162:102:4"
                },
                {
                  "assignments": [
                    915
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 915,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "2282:6:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 949,
                      "src": "2274:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 914,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2274:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 934,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 922,
                          "name": "orderShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 776,
                          "src": "2328:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 924,
                        "indexExpression": {
                          "id": 923,
                          "name": "orderNonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "2340:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2328:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 927,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2361:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LendingVault_$951",
                              "typeString": "contract LendingVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LendingVault_$951",
                              "typeString": "contract LendingVault"
                            }
                          ],
                          "id": 926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2353:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 925,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2353:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2353:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 931,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2376:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LendingVault_$951",
                              "typeString": "contract LendingVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LendingVault_$951",
                              "typeString": "contract LendingVault"
                            }
                          ],
                          "id": 930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2368:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 929,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2368:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2368:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 916,
                          "name": "erc4626s",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 772,
                          "src": "2291:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_ERC20_$4649_$_t_contract$_ERC4626_$4261_$",
                            "typeString": "mapping(contract ERC20 => contract ERC4626)"
                          }
                        },
                        "id": 920,
                        "indexExpression": {
                          "arguments": [
                            {
                              "id": 918,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 886,
                              "src": "2306:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 917,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4649,
                            "src": "2300:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$4649_$",
                              "typeString": "type(contract ERC20)"
                            }
                          },
                          "id": 919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2300:19:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$4649",
                            "typeString": "contract ERC20"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2291:29:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC4626_$4261",
                          "typeString": "contract ERC4626"
                        }
                      },
                      "id": 921,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2321:6:4",
                      "memberName": "redeem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4065,
                      "src": "2291:36:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address,address) external returns (uint256)"
                      }
                    },
                    "id": 933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2291:91:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2274:108:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 940,
                                "name": "orderBookAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 740,
                                "src": "2431:16:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 939,
                              "name": "OrderBook",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1299,
                              "src": "2421:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_OrderBook_$1299_$",
                                "typeString": "type(contract OrderBook)"
                              }
                            },
                            "id": 941,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2421:27:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OrderBook_$1299",
                              "typeString": "contract OrderBook"
                            }
                          },
                          "id": 942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2449:18:4",
                          "memberName": "getExecutorAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1298,
                          "src": "2421:46:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2421:48:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 944,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 915,
                        "src": "2471:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 936,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 886,
                            "src": "2398:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 935,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4649,
                          "src": "2392:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$4649_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2392:19:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$4649",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 938,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2412:8:4",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4399,
                      "src": "2392:28:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2392:86:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 946,
                  "nodeType": "ExpressionStatement",
                  "src": "2392:86:4"
                },
                {
                  "expression": {
                    "id": 947,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 915,
                    "src": "2495:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 894,
                  "id": 948,
                  "nodeType": "Return",
                  "src": "2488:13:4"
                }
              ]
            },
            "functionSelector": "f3fef3a3",
            "id": 950,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 891,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 890,
                  "name": "onlyOrderExecutor",
                  "nameLocations": [
                    "2116:17:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 766,
                  "src": "2116:17:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "2116:17:4"
              }
            ],
            "name": "withdraw",
            "nameLocation": "2056:8:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 886,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "2073:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 950,
                  "src": "2065:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 885,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2065:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 888,
                  "mutability": "mutable",
                  "name": "orderNonce",
                  "nameLocation": "2095:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 950,
                  "src": "2087:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 887,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2087:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2064:42:4"
            },
            "returnParameters": {
              "id": 894,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 893,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 950,
                  "src": "2143:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 892,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2143:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2142:9:4"
            },
            "scope": 951,
            "src": "2047:461:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 952,
        "src": "208:2303:4",
        "usedErrors": []
      }
    ],
    "src": "39:2472:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.11",
  "updatedAt": "2023-03-05T11:03:28.631Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}