{
  "contractName": "IRewardsController",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "assets",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "claimAllRewards",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "rewardsList",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "claimedAmounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"claimAllRewards\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"rewardsList\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"claimedAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"kind\":\"dev\",\"methods\":{\"claimAllRewards(address[],address)\":{\"details\":\"Claims all rewards for a user to the desired address, on all the assets of the pool, accumulating the pending rewards\",\"params\":{\"assets\":\"The list of assets to check eligible distributions before claiming rewards\",\"to\":\"The address that will be receiving the rewards\"},\"returns\":{\"claimedAmounts\":\"List that contains the claimed amount per reward, following same order as \\\"rewardList\\\"\",\"rewardsList\":\"List of addresses of the reward tokens\"}}},\"title\":\"IRewardsController\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Defines the basic interface for a Rewards Controller.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/yield-daddy/aave-v3/external/IRewardsController.sol\":\"IRewardsController\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/yield-daddy/aave-v3/external/IRewardsController.sol\":{\"keccak256\":\"0xa69427f2cb61cb66976d0a0a047ae32773acf96df84c4363ba5e7158b43235de\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://a827e5c8e26df43400da47100392ec25e88ca3011a04b56a3febb5f105b9c943\",\"dweb:/ipfs/Qmbeyuw5Rp6okk6mKDuDk7kGwBTqrHq1HRYy2ZJ4EGVmzE\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.8.4;\n\n/**\n * @title IRewardsController\n * @author Aave\n * @notice Defines the basic interface for a Rewards Controller.\n */\ninterface IRewardsController {\n    /**\n     * @dev Claims all rewards for a user to the desired address, on all the assets of the pool, accumulating the pending rewards\n     * @param assets The list of assets to check eligible distributions before claiming rewards\n     * @param to The address that will be receiving the rewards\n     * @return rewardsList List of addresses of the reward tokens\n     * @return claimedAmounts List that contains the claimed amount per reward, following same order as \"rewardList\"\n     *\n     */\n    function claimAllRewards(address[] calldata assets, address to)\n        external\n        returns (address[] memory rewardsList, uint256[] memory claimedAmounts);\n}",
  "sourcePath": "/Users/blabla/Documents/gelato_test/contracts/yield-daddy/aave-v3/external/IRewardsController.sol",
  "ast": {
    "absolutePath": "project:/contracts/yield-daddy/aave-v3/external/IRewardsController.sol",
    "exportedSymbols": {
      "IRewardsController": [
        4648
      ]
    },
    "id": 4649,
    "license": "AGPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4631,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:23:23"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IRewardsController",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 4632,
          "nodeType": "StructuredDocumentation",
          "src": "62:117:23",
          "text": " @title IRewardsController\n @author Aave\n @notice Defines the basic interface for a Rewards Controller."
        },
        "fullyImplemented": false,
        "id": 4648,
        "linearizedBaseContracts": [
          4648
        ],
        "name": "IRewardsController",
        "nameLocation": "190:18:23",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 4633,
              "nodeType": "StructuredDocumentation",
              "src": "215:491:23",
              "text": " @dev Claims all rewards for a user to the desired address, on all the assets of the pool, accumulating the pending rewards\n @param assets The list of assets to check eligible distributions before claiming rewards\n @param to The address that will be receiving the rewards\n @return rewardsList List of addresses of the reward tokens\n @return claimedAmounts List that contains the claimed amount per reward, following same order as \"rewardList\""
            },
            "functionSelector": "bb492bf5",
            "id": 4647,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "claimAllRewards",
            "nameLocation": "720:15:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4639,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4636,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "755:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4647,
                  "src": "736:25:23",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4634,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "736:7:23",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 4635,
                    "nodeType": "ArrayTypeName",
                    "src": "736:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4638,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "771:2:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4647,
                  "src": "763:10:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4637,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "763:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "735:39:23"
            },
            "returnParameters": {
              "id": 4646,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4642,
                  "mutability": "mutable",
                  "name": "rewardsList",
                  "nameLocation": "826:11:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4647,
                  "src": "809:28:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4640,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "809:7:23",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 4641,
                    "nodeType": "ArrayTypeName",
                    "src": "809:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4645,
                  "mutability": "mutable",
                  "name": "claimedAmounts",
                  "nameLocation": "856:14:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4647,
                  "src": "839:31:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4643,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "839:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4644,
                    "nodeType": "ArrayTypeName",
                    "src": "839:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "808:63:23"
            },
            "scope": 4648,
            "src": "711:161:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4649,
        "src": "180:694:23",
        "usedErrors": []
      }
    ],
    "src": "37:837:23"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.11",
  "updatedAt": "2023-03-02T01:35:07.885Z",
  "devdoc": {
    "author": "Aave",
    "kind": "dev",
    "methods": {
      "claimAllRewards(address[],address)": {
        "details": "Claims all rewards for a user to the desired address, on all the assets of the pool, accumulating the pending rewards",
        "params": {
          "assets": "The list of assets to check eligible distributions before claiming rewards",
          "to": "The address that will be receiving the rewards"
        },
        "returns": {
          "claimedAmounts": "List that contains the claimed amount per reward, following same order as \"rewardList\"",
          "rewardsList": "List of addresses of the reward tokens"
        }
      }
    },
    "title": "IRewardsController",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Defines the basic interface for a Rewards Controller.",
    "version": 1
  }
}