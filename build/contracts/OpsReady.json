{
  "contractName": "OpsReady",
  "abi": [
    {
      "inputs": [],
      "name": "dedicatedMsgSender",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ops",
      "outputs": [
        {
          "internalType": "contract IOps",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"dedicatedMsgSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ops\",\"outputs\":[{\"internalType\":\"contract IOps\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Inherit this contract to allow your smart contract to - Make synchronous fee payments. - Have call restrictions for functions to be automated.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"_taskCreator is the address which will create tasks for this contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/OpsReady.sol\":\"OpsReady\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"project:/contracts/OpsReady.sol\":{\"keccak256\":\"0xe875d031c1dac6c4bd6cc7ecc34b2d9c3ac0977aaf28a4c41ccac5d7bab010fa\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7cc5db81bdc4fcfd678ec3bfca22c924b572220071333e346cc478298c429211\",\"dweb:/ipfs/QmdGobP8TE5arWbg8EZq6T6T9d7srifzuXL3oDRvpnnpBD\"]},\"project:/contracts/Types.sol\":{\"keccak256\":\"0xb4da6dd7097720224eae5d8aadd383155412d1abac31727d5dd19ed558b2d187\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://588376b2e0bed3913e0d257d2d88f4bf2ec8222cf77b8e4b460b71c6194fe052\",\"dweb:/ipfs/QmWs1mjE6VzgJxXZopzEZ9kTK6C9fcpP6z7a1QNUP4Y89D\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.14;\n\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"./Types.sol\";\n\n/**\n * @dev Inherit this contract to allow your smart contract to\n * - Make synchronous fee payments.\n * - Have call restrictions for functions to be automated.\n */\n// solhint-disable private-vars-leading-underscore\nabstract contract OpsReady {\n    IOps public immutable ops;\n    address public immutable dedicatedMsgSender;\n    address private immutable _gelato;\n    address internal constant ETH = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\n    address private constant OPS_PROXY_FACTORY =\n        0xC815dB16D4be6ddf2685C201937905aBf338F5D7;\n\n    /**\n     * @dev\n     * Only tasks created by _taskCreator defined in constructor can call\n     * the functions with this modifier.\n     */\n    modifier onlyDedicatedMsgSender() {\n        require(msg.sender == dedicatedMsgSender, \"Only dedicated msg.sender\");\n        _;\n    }\n\n    /**\n     * @dev\n     * _taskCreator is the address which will create tasks for this contract.\n     */\n    constructor(address _ops, address _taskCreator) {\n        ops = IOps(_ops);\n        _gelato = IOps(_ops).gelato();\n        (dedicatedMsgSender, ) = IOpsProxyFactory(OPS_PROXY_FACTORY).getProxyOf(\n            _taskCreator\n        );\n    }\n\n    /**\n     * @dev\n     * Transfers fee to gelato for synchronous fee payments.\n     *\n     * _fee & _feeToken should be queried from IOps.getFeeDetails()\n     */\n    function _transfer(uint256 _fee, address _feeToken) internal {\n        if (_feeToken == ETH) {\n            (bool success, ) = _gelato.call{value: _fee}(\"\");\n            require(success, \"_transfer: ETH transfer failed\");\n        } else {\n            SafeERC20.safeTransfer(IERC20(_feeToken), _gelato, _fee);\n        }\n    }\n\n    function _getFeeDetails()\n        internal\n        view\n        returns (uint256 fee, address feeToken)\n    {\n        (fee, feeToken) = ops.getFeeDetails();\n    }\n}",
  "sourcePath": "/Users/blabla/Documents/gelato_test/contracts/OpsReady.sol",
  "ast": {
    "absolutePath": "project:/contracts/OpsReady.sol",
    "exportedSymbols": {
      "Address": [
        724
      ],
      "IERC20": [
        77
      ],
      "IERC20Permit": [
        113
      ],
      "IOps": [
        897
      ],
      "IOpsProxyFactory": [
        926
      ],
      "ITaskTreasuryUpgradable": [
        916
      ],
      "Module": [
        851
      ],
      "ModuleData": [
        859
      ],
      "OpsReady": [
        844
      ],
      "SafeERC20": [
        394
      ]
    },
    "id": 845,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 726,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".14"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:24:4"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 727,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 845,
        "sourceUnit": 395,
        "src": "65:65:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Types.sol",
        "file": "./Types.sol",
        "id": 728,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 845,
        "sourceUnit": 927,
        "src": "131:21:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [],
        "canonicalName": "OpsReady",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 729,
          "nodeType": "StructuredDocumentation",
          "src": "154:164:4",
          "text": " @dev Inherit this contract to allow your smart contract to\n - Make synchronous fee payments.\n - Have call restrictions for functions to be automated."
        },
        "fullyImplemented": true,
        "id": 844,
        "linearizedBaseContracts": [
          844
        ],
        "name": "OpsReady",
        "nameLocation": "388:8:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "e70abe92",
            "id": 732,
            "mutability": "immutable",
            "name": "ops",
            "nameLocation": "425:3:4",
            "nodeType": "VariableDeclaration",
            "scope": 844,
            "src": "403:25:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IOps_$897",
              "typeString": "contract IOps"
            },
            "typeName": {
              "id": 731,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 730,
                "name": "IOps",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 897,
                "src": "403:4:4"
              },
              "referencedDeclaration": 897,
              "src": "403:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IOps_$897",
                "typeString": "contract IOps"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "28f150eb",
            "id": 734,
            "mutability": "immutable",
            "name": "dedicatedMsgSender",
            "nameLocation": "459:18:4",
            "nodeType": "VariableDeclaration",
            "scope": 844,
            "src": "434:43:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 733,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "434:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 736,
            "mutability": "immutable",
            "name": "_gelato",
            "nameLocation": "509:7:4",
            "nodeType": "VariableDeclaration",
            "scope": 844,
            "src": "483:33:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 735,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "483:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 739,
            "mutability": "constant",
            "name": "ETH",
            "nameLocation": "548:3:4",
            "nodeType": "VariableDeclaration",
            "scope": 844,
            "src": "522:74:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 737,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "522:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307845656565654565656545654565654565456545656545454565656565456565656565656545456545",
              "id": 738,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "554:42:4",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 742,
            "mutability": "constant",
            "name": "OPS_PROXY_FACTORY",
            "nameLocation": "627:17:4",
            "nodeType": "VariableDeclaration",
            "scope": 844,
            "src": "602:95:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 740,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "602:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307843383135644231364434626536646466323638354332303139333739303561426633333846354437",
              "id": 741,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "655:42:4",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xC815dB16D4be6ddf2685C201937905aBf338F5D7"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 754,
              "nodeType": "Block",
              "src": "881:98:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 746,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "899:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "899:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 748,
                          "name": "dedicatedMsgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 734,
                          "src": "913:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "899:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920646564696361746564206d73672e73656e646572",
                        "id": 750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "933:27:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9b69489a96c66a0b0f1abf4a72a3462ec7d061d362725354e1706bfd9a9face0",
                          "typeString": "literal_string \"Only dedicated msg.sender\""
                        },
                        "value": "Only dedicated msg.sender"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9b69489a96c66a0b0f1abf4a72a3462ec7d061d362725354e1706bfd9a9face0",
                          "typeString": "literal_string \"Only dedicated msg.sender\""
                        }
                      ],
                      "id": 745,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "891:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "891:70:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 752,
                  "nodeType": "ExpressionStatement",
                  "src": "891:70:4"
                },
                {
                  "id": 753,
                  "nodeType": "PlaceholderStatement",
                  "src": "971:1:4"
                }
              ]
            },
            "documentation": {
              "id": 743,
              "nodeType": "StructuredDocumentation",
              "src": "704:138:4",
              "text": " @dev\n Only tasks created by _taskCreator defined in constructor can call\n the functions with this modifier."
            },
            "id": 755,
            "name": "onlyDedicatedMsgSender",
            "nameLocation": "856:22:4",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 744,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "878:2:4"
            },
            "src": "847:132:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 787,
              "nodeType": "Block",
              "src": "1139:189:4",
              "statements": [
                {
                  "expression": {
                    "id": 767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 763,
                      "name": "ops",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 732,
                      "src": "1149:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOps_$897",
                        "typeString": "contract IOps"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 765,
                          "name": "_ops",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 758,
                          "src": "1160:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 764,
                        "name": "IOps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 897,
                        "src": "1155:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IOps_$897_$",
                          "typeString": "type(contract IOps)"
                        }
                      },
                      "id": 766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1155:10:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOps_$897",
                        "typeString": "contract IOps"
                      }
                    },
                    "src": "1149:16:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IOps_$897",
                      "typeString": "contract IOps"
                    }
                  },
                  "id": 768,
                  "nodeType": "ExpressionStatement",
                  "src": "1149:16:4"
                },
                {
                  "expression": {
                    "id": 775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 769,
                      "name": "_gelato",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 736,
                      "src": "1175:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 771,
                              "name": "_ops",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 758,
                              "src": "1190:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 770,
                            "name": "IOps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 897,
                            "src": "1185:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IOps_$897_$",
                              "typeString": "type(contract IOps)"
                            }
                          },
                          "id": 772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1185:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IOps_$897",
                            "typeString": "contract IOps"
                          }
                        },
                        "id": 773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "gelato",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 890,
                        "src": "1185:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_payable_$",
                          "typeString": "function () view external returns (address payable)"
                        }
                      },
                      "id": 774,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1185:19:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1175:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 776,
                  "nodeType": "ExpressionStatement",
                  "src": "1175:29:4"
                },
                {
                  "expression": {
                    "id": 785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 777,
                          "name": "dedicatedMsgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 734,
                          "src": "1215:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        null
                      ],
                      "id": 778,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "1214:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$__$",
                        "typeString": "tuple(address,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 783,
                          "name": "_taskCreator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 760,
                          "src": "1299:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 780,
                              "name": "OPS_PROXY_FACTORY",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 742,
                              "src": "1256:17:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 779,
                            "name": "IOpsProxyFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 926,
                            "src": "1239:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IOpsProxyFactory_$926_$",
                              "typeString": "type(contract IOpsProxyFactory)"
                            }
                          },
                          "id": 781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1239:35:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IOpsProxyFactory_$926",
                            "typeString": "contract IOpsProxyFactory"
                          }
                        },
                        "id": 782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getProxyOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 925,
                        "src": "1239:46:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$_t_bool_$",
                          "typeString": "function (address) view external returns (address,bool)"
                        }
                      },
                      "id": 784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1239:82:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_bool_$",
                        "typeString": "tuple(address,bool)"
                      }
                    },
                    "src": "1214:107:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 786,
                  "nodeType": "ExpressionStatement",
                  "src": "1214:107:4"
                }
              ]
            },
            "documentation": {
              "id": 756,
              "nodeType": "StructuredDocumentation",
              "src": "985:101:4",
              "text": " @dev\n _taskCreator is the address which will create tasks for this contract."
            },
            "id": 788,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 758,
                  "mutability": "mutable",
                  "name": "_ops",
                  "nameLocation": "1111:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 788,
                  "src": "1103:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 757,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1103:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 760,
                  "mutability": "mutable",
                  "name": "_taskCreator",
                  "nameLocation": "1125:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 788,
                  "src": "1117:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 759,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1117:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1102:36:4"
            },
            "returnParameters": {
              "id": 762,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1139:0:4"
            },
            "scope": 844,
            "src": "1091:237:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 826,
              "nodeType": "Block",
              "src": "1559:262:4",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 796,
                      "name": "_feeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 793,
                      "src": "1573:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 797,
                      "name": "ETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 739,
                      "src": "1586:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1573:16:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 824,
                    "nodeType": "Block",
                    "src": "1734:81:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 818,
                                  "name": "_feeToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 793,
                                  "src": "1778:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 817,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 77,
                                "src": "1771:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 819,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1771:17:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$77",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "id": 820,
                              "name": "_gelato",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 736,
                              "src": "1790:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 821,
                              "name": "_fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 791,
                              "src": "1799:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$77",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 814,
                              "name": "SafeERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 394,
                              "src": "1748:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SafeERC20_$394_$",
                                "typeString": "type(library SafeERC20)"
                              }
                            },
                            "id": 816,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 145,
                            "src": "1748:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1748:56:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 823,
                        "nodeType": "ExpressionStatement",
                        "src": "1748:56:4"
                      }
                    ]
                  },
                  "id": 825,
                  "nodeType": "IfStatement",
                  "src": "1569:246:4",
                  "trueBody": {
                    "id": 813,
                    "nodeType": "Block",
                    "src": "1591:137:4",
                    "statements": [
                      {
                        "assignments": [
                          800,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 800,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "1611:7:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 813,
                            "src": "1606:12:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 799,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1606:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 807,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 805,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1650:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "id": 801,
                                "name": "_gelato",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 736,
                                "src": "1624:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 802,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "1624:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 804,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 803,
                                "name": "_fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 791,
                                "src": "1644:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "1624:25:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1624:29:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1605:48:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 809,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 800,
                              "src": "1675:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5f7472616e736665723a20455448207472616e73666572206661696c6564",
                              "id": 810,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1684:32:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7b2608509fad3367252215e12ab17e0549386ffa6e3ab604b4d2bb3a73448079",
                                "typeString": "literal_string \"_transfer: ETH transfer failed\""
                              },
                              "value": "_transfer: ETH transfer failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7b2608509fad3367252215e12ab17e0549386ffa6e3ab604b4d2bb3a73448079",
                                "typeString": "literal_string \"_transfer: ETH transfer failed\""
                              }
                            ],
                            "id": 808,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1667:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1667:50:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 812,
                        "nodeType": "ExpressionStatement",
                        "src": "1667:50:4"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 789,
              "nodeType": "StructuredDocumentation",
              "src": "1334:159:4",
              "text": " @dev\n Transfers fee to gelato for synchronous fee payments.\n _fee & _feeToken should be queried from IOps.getFeeDetails()"
            },
            "id": 827,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "1507:9:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 794,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 791,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "1525:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 827,
                  "src": "1517:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 790,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1517:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 793,
                  "mutability": "mutable",
                  "name": "_feeToken",
                  "nameLocation": "1539:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 827,
                  "src": "1531:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 792,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1531:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1516:33:4"
            },
            "returnParameters": {
              "id": 795,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1559:0:4"
            },
            "scope": 844,
            "src": "1498:323:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 842,
              "nodeType": "Block",
              "src": "1935:54:4",
              "statements": [
                {
                  "expression": {
                    "id": 840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 834,
                          "name": "fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 830,
                          "src": "1946:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 835,
                          "name": "feeToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 832,
                          "src": "1951:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 836,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "1945:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
                        "typeString": "tuple(uint256,address)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 837,
                          "name": "ops",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 732,
                          "src": "1963:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IOps_$897",
                            "typeString": "contract IOps"
                          }
                        },
                        "id": 838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getFeeDetails",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 885,
                        "src": "1963:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$_t_address_$",
                          "typeString": "function () view external returns (uint256,address)"
                        }
                      },
                      "id": 839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1963:19:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
                        "typeString": "tuple(uint256,address)"
                      }
                    },
                    "src": "1945:37:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 841,
                  "nodeType": "ExpressionStatement",
                  "src": "1945:37:4"
                }
              ]
            },
            "id": 843,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getFeeDetails",
            "nameLocation": "1836:14:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 828,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1850:2:4"
            },
            "returnParameters": {
              "id": 833,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 830,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "1908:3:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 843,
                  "src": "1900:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 829,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1900:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 832,
                  "mutability": "mutable",
                  "name": "feeToken",
                  "nameLocation": "1921:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 843,
                  "src": "1913:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 831,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1913:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1899:31:4"
            },
            "scope": 844,
            "src": "1827:162:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 845,
        "src": "370:1621:4",
        "usedErrors": []
      }
    ],
    "src": "39:1952:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.14+commit.80d49f37.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.11",
  "updatedAt": "2023-02-25T19:50:29.719Z",
  "devdoc": {
    "details": "Inherit this contract to allow your smart contract to - Make synchronous fee payments. - Have call restrictions for functions to be automated.",
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "_taskCreator is the address which will create tasks for this contract."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}